<div class="container">
  <h1>Анализ графиков различных функций</h1>

  <!-- Выбираем конкретный тип функций -->
  <div id="function-type-select">
    <h3>Выберите тип рассматриваемых функций:</h3>
    <div class="choice-buttons">
      <button type="submit" id="polynomial-type-button" class="choice-polynomial">Полиномиальные</button>
      <button type="submit" id="trigonometry-type-button" class="choice-trigonometry">Тригонометрические</button>
    </div>
  </div>

  <%= form_with id: "trigonometric-form" do |form| %>
    <div class="input-group">
      <label>Введите нужную функцию:</label>
      <input type="text" name="coefficients" placeholder="Примеры: 2sin(3x), cos(2x+1), tan(123x), ctan(42x)" required>
      <div class="error-message" id="input-error" style="display: none;"></div>
    </div>

    <div class="input-group range-group">
      <label>Диапазон X:</label>
      <div class="range-fields">
        <span>от</span>
        <input type="number" name="x_min" placeholder="-10.0" step="0.1" class="range-input">
        <span>до</span>
        <input type="number" name="x_max" placeholder="10.0" step="0.1" class="range-input">
      </div>
    </div>

    <div class="input-group range-group">
      <label>Расчитать определенный интеграл:</label>
      <div class="range-fields">
        <span>от</span>
        <input type="number" name="integral_min" placeholder="1" step="0.1" class="range-input">
        <span>до</span>
        <input type="number" name="integral_max" placeholder="5" step="0.1" class="range-input">
      </div>
    </div>

    <button type="submit">Рассчитать</button>
  <% end %>

  <%= form_with id: "polynomial-form" do |form| %>
    <div class="input-group">
      <label>Коэффициенты (через запятую):</label>
      <input type="text" name="coefficients" placeholder="Пример: 1,-2,3" required>
      <div class="error-message" id="input-error" style="display: none;"></div>
    </div>

    <div class="input-group range-group">
      <label>Диапазон X:</label>
      <div class="range-fields">
        <span>от</span>
        <input type="number" name="x_min" placeholder="-10.0" step="0.1" class="range-input">
        <span>до</span>
        <input type="number" name="x_max" placeholder="10.0" step="0.1" class="range-input">
        <span>шаг</span>
        <input type="number" name="step" placeholder="0.5" step="0.1" min="0.1" class="range-input step-input">
      </div>
    </div>

    <div class="input-group range-group">
      <label>Диапазон Y:</label>
      <div class="range-fields">
        <input type="number" name="y_max" placeholder="Авто" step="0.1" class="range-input">
      </div>
    </div>

    <div class="input-group range-group">
      <label>Расчитать определенный интеграл:</label>
      <div class="range-fields">
        <span>от</span>
        <input type="number" name="integral_min" placeholder="1" step="0.1" class="range-input">
        <span>до</span>
        <input type="number" name="integral_max" placeholder="5" step="0.1" class="range-input">
      </div>
    </div>

    <button type="submit">Рассчитать</button>
  <% end %>

  <!-- Блоки для вывода результатов -->
  <div id="calculations-results" class="mt-4" style="display: none;">
    <div class="result-box">
      <h3>График функции:</h3>
      <div class="chart-container">
        <canvas id="functionChart"></canvas>
      </div>
    </div>

    <div class="result-box">
      <h3>Результаты интегрирования:</h3>
      <p id="integral-result" class="result-text"></p>
      <p id="definite-integral-result" class="result-text"></p>
    </div>
  </div>

  <div id="server-error" class="error-message" style="display: none;"></div>
</div>

<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/chart.js" %>
<script>
    document.getElementById('polynomial-form').style.display = "none";
    document.getElementById("trigonometric-form").style.display = "none";

    document.getElementById('polynomial-type-button').addEventListener('click', function(){
        this.classList.add('active');
        document.getElementById("trigonometry-type-button").classList.remove("active");
        document.getElementById('polynomial-form').style.display = "block";
        document.getElementById("trigonometric-form").style.display = "none";
    });

    document.getElementById('trigonometry-type-button').addEventListener('click', function() {
        this.classList.add('active');
        document.getElementById('polynomial-type-button').classList.remove('active');
        document.getElementById('trigonometric-form').style.display = 'block';
        document.getElementById('polynomial-form').style.display = 'none';
    });

    document.getElementById('polynomial-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        const input = this.querySelector('input[name="coefficients"]');
        const resultsDiv = document.getElementById('calculations-results');
        const errorDiv = document.getElementById('server-error');
        const inputError = document.getElementById('input-error');

        // Сброс состояний
        resultsDiv.style.display = 'none';
        errorDiv.style.display = 'none';
        inputError.style.display = 'none';

        try {
            const response = await fetch('<%= calculate_path %>', {
                method: 'POST',
                body: new FormData(this),
                headers: {
                    'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
                }
            });

            const data = await response.json();

            if (!response.ok) {
                const errorContainer = data.error.includes('коэффициент') ? inputError : errorDiv;
                showError(errorContainer, data.error);
                return;
            }

            renderChart(data.points, data.y_range);
            document.getElementById('integral-result').innerHTML =
              `Неопределенный интеграл: <strong>${data.integral}</strong>`;
            document.getElementById('definite-integral-result').innerHTML =
              `Определенный интеграл от ${data.integral_range.min} до ${data.integral_range.max}: <strong>${data.definite}</strong>`;

            resultsDiv.style.display = 'block';
        } catch (error) {
            showError(errorDiv, error.message);
        }
    });

    function renderChart(points, yRange = { min: 0, max: null }) {
        const ctx = document.getElementById('functionChart').getContext('2d');

        if(window.myChart) {
            window.myChart.destroy();
        }

        window.myChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Исходная функция',
                    data: points,
                    borderColor: '#4a90e2',
                    borderWidth: 2,
                    pointRadius: 0,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        type: 'linear',
                        title: { display: true, text: 'X' },
                        grid: { color: '#eee' }
                    },
                    y: {
                        type: 'linear',
                        title: { display: true, text: 'Y' },
                        grid: { color: '#eee' },
                        min: yRange.min,
                        max: yRange.max || undefined
                    }
                },
                plugins: {
                    legend: { display: false }
                }
            }
        });
    }

    document.getElementById('trigonometric-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        const resultsDiv = document.getElementById('calculations-results');
        const errorDiv = document.getElementById('server-error');
        const inputError = document.getElementById('input-error');

        // Сброс состояний
        resultsDiv.style.display = 'none';
        errorDiv.style.display = 'none';
        inputError.style.display = 'none';

        try {
            const formData = new FormData(this);
            const response = await fetch('<%= trigonometric_calculate_path %>', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
                }
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || 'Неизвестная ошибка сервера');
            }

            const data = await response.json();

            // Отображение результатов
            renderChartByTrigonometric(data.points);
            document.getElementById('integral-result').innerHTML =
              `Неопределенный интеграл: <strong>${data.integral}</strong>`;
            document.getElementById('definite-integral-result').innerHTML =
              `Определенный интеграл от ${data.integral_range.min} до ${data.integral_range.max}: <strong>${data.definite}</strong>`;
            resultsDiv.style.display = 'block';
        } catch (error) {
            showError(errorDiv, error.message);
        }
    });

    function renderChartByTrigonometric(points) {
        const ctx = document.getElementById('functionChart').getContext('2d');

        if(window.myChart) {
            window.myChart.destroy();
        }

        const chartData = points.map(point => ({
            x: point.x,
            y: point.y
        }));

        window.myChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [{
                    label: 'График функции',
                    data: chartData,
                    borderColor: '#4a90e2',
                    borderWidth: 2,
                    pointRadius: 0,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        type: 'linear',
                        position: 'center'
                    },
                    y: {
                        type: 'linear',
                        position: 'center'
                    }
                }
            }
        });
    }

    function showError(container, message) {
        container.textContent = message;
        container.style.display = 'block';
        setTimeout(() => container.style.display = 'none', 5000);
    }
</script>

<style>
    .container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 1rem;
        font-family: 'Segoe UI', sans-serif;
    }

    .result-box {
        background: #fff;
        border-radius: 10px;
        padding: 1.5rem;
        margin: 1rem 0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border: 1px solid #e0e0e0;
    }

    .result-text {
        font-size: 1.1rem;
        margin: 0.5rem 0;
        color: #2c3e50;
        line-height: 1.6;
    }

    .chart-container {
        height: 400px;
        margin: 1rem 0;
        position: relative;
    }

    .input-group {
        margin: 1.5rem 0;
    }

    input[type="text"] {
        width: 100%;
        padding: 0.8rem;
        border: 2px solid #ddd;
        border-radius: 6px;
        font-size: 1rem;
        transition: border-color 0.3s;
    }

    input[type="text"]:focus {
        border-color: #4a90e2;
        outline: none;
    }

    button[type="submit"] {
        background: #4a90e2;
        color: white;
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
        transition: background 0.3s, transform 0.2s;
    }

    button[type="submit"]:hover {
        background: #357abd;
        transform: translateY(-1px);
    }

    button[type="submit"]:active {
        transform: translateY(0);
    }

    .error-message {
        color: #dc3545;
        padding: 0.5rem;
        margin-top: 0.5rem;
        background: #f8d7da;
        border-radius: 4px;
        border: 1px solid #f5c6cb;
    }

    h1, h3 {
        color: #2c3e50;
        margin-bottom: 1.5rem;
    }

    /* Стили для группы диапазона */
    .range-group {
        margin: 1.5rem 0;
    }

    .range-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: #2c3e50;
    }

    .range-fields {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .range-fields span {
        color: #555;
        font-size: 0.9em;
    }

    .range-input {
        padding: 0.6rem;
        border: 2px solid #ddd;
        border-radius: 4px;
        font-size: 0.9rem;
        width: 80px;
        transition: border-color 0.3s;
    }

    .range-input:focus {
        border-color: #4a90e2;
        outline: none;
    }

    .step-input {
        width: 60px;
    }

    .input-group.range-group {
        margin-bottom: 1rem;
    }

    .range-fields {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .range-input {
        width: 80px;
    }

    /* Адаптация для мобильных */
    @media (max-width: 600px) {
        .range-fields {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.3rem;
        }

        .range-input {
            width: 100%;
        }
    }
</style>